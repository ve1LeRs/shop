{"ast":null,"code":"\"use strict\";\n\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeCrypto = void 0;\nconst crypto = require(\"crypto\");\nclass NodeCrypto {\n  async sha256DigestBase64(str) {\n    return crypto.createHash('sha256').update(str).digest('base64');\n  }\n  randomBytesBase64(count) {\n    return crypto.randomBytes(count).toString('base64');\n  }\n  async verify(pubkey, data, signature) {\n    const verifier = crypto.createVerify('sha256');\n    verifier.update(data);\n    verifier.end();\n    return verifier.verify(pubkey, signature, 'base64');\n  }\n  async sign(privateKey, data) {\n    const signer = crypto.createSign('RSA-SHA256');\n    signer.update(data);\n    signer.end();\n    return signer.sign(privateKey, 'base64');\n  }\n  decodeBase64StringUtf8(base64) {\n    return Buffer.from(base64, 'base64').toString('utf-8');\n  }\n  encodeBase64StringUtf8(text) {\n    return Buffer.from(text, 'utf-8').toString('base64');\n  }\n}\nexports.NodeCrypto = NodeCrypto;","map":{"version":3,"names":["Object","defineProperty","exports","value","NodeCrypto","crypto","require","sha256DigestBase64","str","createHash","update","digest","randomBytesBase64","count","randomBytes","toString","verify","pubkey","data","signature","verifier","createVerify","end","sign","privateKey","signer","createSign","decodeBase64StringUtf8","base64","Buffer","from","encodeBase64StringUtf8","text"],"sources":["C:/Users/79818/shop1/node_modules/google-auth-library/build/src/crypto/node/crypto.js"],"sourcesContent":["\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeCrypto = void 0;\nconst crypto = require(\"crypto\");\nclass NodeCrypto {\n    async sha256DigestBase64(str) {\n        return crypto.createHash('sha256').update(str).digest('base64');\n    }\n    randomBytesBase64(count) {\n        return crypto.randomBytes(count).toString('base64');\n    }\n    async verify(pubkey, data, signature) {\n        const verifier = crypto.createVerify('sha256');\n        verifier.update(data);\n        verifier.end();\n        return verifier.verify(pubkey, signature, 'base64');\n    }\n    async sign(privateKey, data) {\n        const signer = crypto.createSign('RSA-SHA256');\n        signer.update(data);\n        signer.end();\n        return signer.sign(privateKey, 'base64');\n    }\n    decodeBase64StringUtf8(base64) {\n        return Buffer.from(base64, 'base64').toString('utf-8');\n    }\n    encodeBase64StringUtf8(text) {\n        return Buffer.from(text, 'utf-8').toString('base64');\n    }\n}\nexports.NodeCrypto = NodeCrypto;\n//# sourceMappingURL=crypto.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMF,UAAU,CAAC;EACb,MAAMG,kBAAkBA,CAACC,GAAG,EAAE;IAC1B,OAAOH,MAAM,CAACI,UAAU,CAAC,QAAQ,CAAC,CAACC,MAAM,CAACF,GAAG,CAAC,CAACG,MAAM,CAAC,QAAQ,CAAC;EACnE;EACAC,iBAAiBA,CAACC,KAAK,EAAE;IACrB,OAAOR,MAAM,CAACS,WAAW,CAACD,KAAK,CAAC,CAACE,QAAQ,CAAC,QAAQ,CAAC;EACvD;EACA,MAAMC,MAAMA,CAACC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAE;IAClC,MAAMC,QAAQ,GAAGf,MAAM,CAACgB,YAAY,CAAC,QAAQ,CAAC;IAC9CD,QAAQ,CAACV,MAAM,CAACQ,IAAI,CAAC;IACrBE,QAAQ,CAACE,GAAG,CAAC,CAAC;IACd,OAAOF,QAAQ,CAACJ,MAAM,CAACC,MAAM,EAAEE,SAAS,EAAE,QAAQ,CAAC;EACvD;EACA,MAAMI,IAAIA,CAACC,UAAU,EAAEN,IAAI,EAAE;IACzB,MAAMO,MAAM,GAAGpB,MAAM,CAACqB,UAAU,CAAC,YAAY,CAAC;IAC9CD,MAAM,CAACf,MAAM,CAACQ,IAAI,CAAC;IACnBO,MAAM,CAACH,GAAG,CAAC,CAAC;IACZ,OAAOG,MAAM,CAACF,IAAI,CAACC,UAAU,EAAE,QAAQ,CAAC;EAC5C;EACAG,sBAAsBA,CAACC,MAAM,EAAE;IAC3B,OAAOC,MAAM,CAACC,IAAI,CAACF,MAAM,EAAE,QAAQ,CAAC,CAACb,QAAQ,CAAC,OAAO,CAAC;EAC1D;EACAgB,sBAAsBA,CAACC,IAAI,EAAE;IACzB,OAAOH,MAAM,CAACC,IAAI,CAACE,IAAI,EAAE,OAAO,CAAC,CAACjB,QAAQ,CAAC,QAAQ,CAAC;EACxD;AACJ;AACAb,OAAO,CAACE,UAAU,GAAGA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}